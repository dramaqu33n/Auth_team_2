version: '3'

networks:
  new_admin_panel_sprint_2_admin_panel_network:
    driver: bridge

services:
  postgres_auth:
    container_name: postgres_auth   
    image: postgres:13
    restart: always
    networks:
      - new_admin_panel_sprint_2_admin_panel_network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data 

  redis:
    image: redis:7
    container_name: redis_auth
    restart: always
    networks:
      - new_admin_panel_sprint_2_admin_panel_network
    volumes:
      - redis_data:/data
  
  auth_service:
    build: .
    container_name: auth_service
    restart: always
    networks:
      - new_admin_panel_sprint_2_admin_panel_network
  
  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger_auth
    volumes:
      - ./raw_api_schema.yaml:/swagger.yaml
    environment:
      - SWAGGER_JSON=/swagger.yaml
    ports:
      - "8080:8080"
    networks:
      - new_admin_panel_sprint_2_admin_panel_network
    
  nginx:
    image: nginx:1.25
    container_name: nginx_fastapi
    restart: always
    depends_on:
      - auth_service
    ports:
      - "80:80"
    networks:
      - new_admin_panel_sprint_2_admin_panel_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_auth_data:
  redis_data:

